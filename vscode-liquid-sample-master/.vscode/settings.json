{

  // By default the extension assumes you are developing with the Shopfiy Liquid
  // variation. If you are working with Jekyll or 11ty then set this to "standard".
  //
  "liquid.engine": "shopify",

  // Use this to control where settings should be applied. Typically, you should
  // leave this alone and always target workspace. Targeting "user" might result in issues.
  //
  "liquid.settings.target": "workspace",

  // Use this setting to target a .liquidrc file or package.json with "prettify" field.
  // By default, the extension looks in the root directory of your opened project.
  //
  "liquid.config.baseUrl": ".",

  // These settings control completion capabilities. You can disable completions by
  // setting all these options to false. All options are enabled by default.
  //
  "liquid.completion.tags": true,
  "liquid.completion.filters": true,
  "liquid.completion.objects": true,

  // This setting is a kill-switch for beautification. Setting this to false will disable
  // formatting. This option will be changed when you press the status bar item.
  //
  "liquid.format.enable": true,

  // You can also define these rules within a .liquidrc file or on a "prettify" field in
  // package.json file. When either of those methods are used they will take precendence
  // of the rules you have defined in workspace.
  //
  // In this example repo we are using a .liquidrc file to define rules. If you prefer to use
  // the workspace, then you will need to delete the .liquirc file and uncomment the rules.
  //
  // "liquid.format.ignore": [],
  // "liquid.format.indentSize": 2,
  // "liquid.format.wrap": 0,
  // "liquid.format.preserveLine": 3,
  // "liquid.format.preserveComment": false,
  // "liquid.format.crlf": false,
  // "liquid.format.endNewLine": false,
  // "liquid.format.commentIndent": false,
  // "liquid.format.markup": {},
  // "liquid.format.json": {},
  // "liquid.format.style": {},
  // "liquid.format.script": {},


  // These are in-language settings that will enable features like formatting on save
  // and ensures that Prettify is configured to format Liquid files.
  //
  "[liquid]": {
    "editor.bracketPairColorization.enabled": false,
    "editor.defaultFormatter": "sissel.shopify-liquid",
    "editor.formatOnSave": true
  },
  "[liquid-css]": {
    "editor.defaultFormatter": "sissel.shopify-liquid",
    "editor.formatOnSave": true
  },
  "[liquid-scss]": {
    "editor.defaultFormatter": "sissel.shopify-liquid",
    "editor.formatOnSave": true
  },
  "[liquid-javascript]": {
    "editor.defaultFormatter": "sissel.shopify-liquid",
    "editor.formatOnSave": true
  },

  // You can also extend formatting to handle these additional languages. You can uncomment
  // the below configurations and Prettify will be used to beautify these languages
  //
  "[json]": {
    // "editor.defaultFormatter": "sissel.shopify-liquid",
    // "editor.formatOnSave": true
  },
  "[jsonc]": {
    // "editor.defaultFormatter": "sissel.shopify-liquid",
    // "editor.formatOnSave": true
  },

  // These options will prevent vscode from validating the Liquid code used in JSON files.
  // Typically, you'd
}
